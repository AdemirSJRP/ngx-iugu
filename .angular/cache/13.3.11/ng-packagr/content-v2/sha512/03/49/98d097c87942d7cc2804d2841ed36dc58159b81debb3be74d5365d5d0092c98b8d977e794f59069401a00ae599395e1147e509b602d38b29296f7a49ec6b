{"hash":"4d602536795a687fe3c65403618c97d09ec7a42c","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\n\nconst iuguParam = new InjectionToken('iuguParam');\r\nclass IuguBaseService {\r\n    constructor(iuguConfig) {\r\n        this.iuguConfig = iuguConfig;\r\n        if (iuguConfig.autoInicialize) {\r\n            this.initialize().then(() => console.log('iugu script loaded'));\r\n        }\r\n    }\r\n    async initialize(accountID = '') {\r\n        this.Iugu = await this.loadScript();\r\n        this.Iugu.setAccountID(this.iuguConfig?.accountID || accountID);\r\n        this.Iugu.setTestMode(this.iuguConfig?.testMode ?? true);\r\n    }\r\n    async loadScript() {\r\n        const script = document.createElement('script');\r\n        document.body.appendChild(script);\r\n        script.type = 'text/javascript';\r\n        const promise = new Promise((resolve) => {\r\n            script.onload = () => resolve(window.Iugu);\r\n        });\r\n        script.src = this.iuguConfig?.CDN ?? 'https://js.iugu.com/v2';\r\n        return promise;\r\n    }\r\n}\r\nIuguBaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, deps: [{ token: iuguParam }], target: i0.ɵɵFactoryTarget.Injectable });\r\nIuguBaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [iuguParam]\r\n                }] }]; } });\n\nclass NgxIuguService extends IuguBaseService {\r\n    createCreditCardObject({ cardExpirationMonth, cardExpirationYear, cardNumber, securityCode, firstName, surName, }) {\r\n        return this.Iugu.CreditCard(cardNumber, cardExpirationMonth, cardExpirationYear, firstName, surName, securityCode);\r\n    }\r\n    async createTokenByObject(paymentData) {\r\n        const creditCardObject = this.createCreditCardObject(paymentData);\r\n        return await this.createToken(creditCardObject);\r\n    }\r\n    createToken(paymentData) {\r\n        return new Promise((resolve, reject) => {\r\n            this.Iugu.createPaymentToken(paymentData, (response) => response.errors ? reject(response) : resolve(response));\r\n        });\r\n    }\r\n}\r\nNgxIuguService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxIuguService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }] });\n\n// @dynamic\r\nclass NgxIuguModule {\r\n    static footRoot(iuguConfig) {\r\n        return {\r\n            ngModule: NgxIuguModule,\r\n            providers: [\r\n                NgxIuguService,\r\n                ,\r\n                {\r\n                    provide: iuguParam,\r\n                    useValue: iuguConfig,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nNgxIuguModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxIuguModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule });\r\nNgxIuguModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [],\r\n                    exports: [],\r\n                }]\r\n        }] });\n\nclass NgxIuguValidationsService {\r\n    constructor() {\r\n        this.asyncValidateCreditCardNumber = (control) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const iugu = this.getIugu();\r\n                    const isValidNumber = iugu.utils.validateCreditCardNumber(control.value);\r\n                    resolver(isValidNumber ? null : { invalidNumber: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n        this.asyncValidateAccountID = (field) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const regex = /^[a-fA-F0-9]{8}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{12}$/;\r\n                    const isValidAccountID = regex.test(field.value);\r\n                    resolver(isValidAccountID ? null : { invalidAccountId: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n        this.asyncValidateExpiration = (field) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const { value } = field;\r\n                    const iugu = this.getIugu();\r\n                    const [cardExpirationMonth, cardExpirationYear] = iugu.utils.getMonthYearByFullExpiration(value);\r\n                    const isValidExpiration = iugu.utils.validateExpiration(cardExpirationMonth, cardExpirationYear);\r\n                    resolver(isValidExpiration ? null : { invalidExpiration: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n    }\r\n    getIugu() {\r\n        const iugu = window.Iugu;\r\n        if (!iugu) {\r\n            throw new Error('iugu scripts not yet initialized');\r\n        }\r\n        return iugu;\r\n    }\r\n    validateCVV(creditCardNumber, securityCode) {\r\n        return (form) => {\r\n            try {\r\n                const cvv = form.controls[securityCode]?.value;\r\n                const ccNumber = form.controls[creditCardNumber]?.value;\r\n                const iugu = this.getIugu();\r\n                const flag = iugu.utils.getBrandByCreditCardNumber(ccNumber?.toString());\r\n                if (!flag || !ccNumber) {\r\n                    return form.controls[securityCode].setErrors({\r\n                        withoutCreditCardNumber: true,\r\n                    });\r\n                }\r\n                const isValidCVV = iugu.utils.validateCVV(cvv, flag);\r\n                if (!isValidCVV) {\r\n                    form.controls[securityCode].setErrors({ invalidCVV: true });\r\n                }\r\n                return isValidCVV ? null : { invalidCVV: true };\r\n            }\r\n            catch (error) {\r\n                return { iuguNotInitialized: true };\r\n            }\r\n        };\r\n    }\r\n}\r\nNgxIuguValidationsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxIuguValidationsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\n/*\r\n * Public API Surface of ngx-iugu\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxIuguModule, NgxIuguService, NgxIuguValidationsService };\n//# sourceMappingURL=ngx-iugu.mjs.map\n","map":{"version":3,"file":"ngx-iugu.mjs","sources":["../../../projects/ngx-iugu/src/lib/iugu-base/iugu-base.service.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu/ngx-iugu.service.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu.module.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu-validations/ngx-iugu-validations.service.ts","../../../projects/ngx-iugu/src/public-api.ts","../../../projects/ngx-iugu/src/ngx-iugu.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { IuguConfig } from '../ngx-iugu/ngx-iugu.models';\r\nimport { Iugu } from './iugu-base.models';\r\n\r\nexport const iuguParam = new InjectionToken<IuguConfig>('iuguParam');\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IuguBaseService {\r\n  Iugu: Iugu;\r\n\r\n  constructor(@Inject(iuguParam) private iuguConfig?: IuguConfig) {\r\n    if (iuguConfig.autoInicialize) {\r\n      this.initialize().then(() => console.log('iugu script loaded'));\r\n    }\r\n  }\r\n\r\n  async initialize(accountID = ''): Promise<void> {\r\n    this.Iugu = await this.loadScript();\r\n\r\n    this.Iugu.setAccountID(this.iuguConfig?.accountID || accountID);\r\n    this.Iugu.setTestMode(this.iuguConfig?.testMode ?? true);\r\n  }\r\n\r\n  private async loadScript(): Promise<Iugu> {\r\n    const script = document.createElement('script');\r\n    document.body.appendChild(script);\r\n    script.type = 'text/javascript';\r\n\r\n    const promise = new Promise<Iugu>((resolve) => {\r\n      script.onload = () => resolve((window as any).Iugu);\r\n    });\r\n\r\n    script.src = this.iuguConfig?.CDN ?? 'https://js.iugu.com/v2';\r\n    return promise;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CreditCardObjectIugu } from '../iugu-base/iugu-base.models';\r\nimport { IuguBaseService } from '../iugu-base/iugu-base.service';\r\nimport { IuguCreditCard, IuguResponse } from './ngx-iugu.models';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgxIuguService extends IuguBaseService {\r\n  createCreditCardObject({\r\n    cardExpirationMonth,\r\n    cardExpirationYear,\r\n    cardNumber,\r\n    securityCode,\r\n    firstName,\r\n    surName,\r\n  }: IuguCreditCard): CreditCardObjectIugu {\r\n    return this.Iugu.CreditCard(\r\n      cardNumber,\r\n      cardExpirationMonth,\r\n      cardExpirationYear,\r\n      firstName,\r\n      surName,\r\n      securityCode\r\n    );\r\n  }\r\n\r\n  async createTokenByObject(\r\n    paymentData: IuguCreditCard\r\n  ): Promise<IuguResponse> {\r\n    const creditCardObject = this.createCreditCardObject(paymentData);\r\n    return await this.createToken(creditCardObject);\r\n  }\r\n\r\n  createToken(paymentData: CreditCardObjectIugu): Promise<IuguResponse> {\r\n    return new Promise((resolve, reject) => {\r\n      this.Iugu.createPaymentToken(paymentData, (response: IuguResponse) =>\r\n        response.errors ? reject(response) : resolve(response)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxIuguService } from './ngx-iugu/ngx-iugu.service';\r\n\r\nimport { IuguConfig } from './ngx-iugu/ngx-iugu.models';\r\nimport { iuguParam } from './iugu-base/iugu-base.service';\r\n// @dynamic\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n})\r\nexport class NgxIuguModule {\r\n  static footRoot(iuguConfig: IuguConfig): ModuleWithProviders<NgxIuguModule> {\r\n    return {\r\n      ngModule: NgxIuguModule,\r\n      providers: [\r\n        NgxIuguService,\r\n        ,\r\n        {\r\n          provide: iuguParam,\r\n          useValue: iuguConfig,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Iugu } from '../iugu-base/iugu-base.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgxIuguValidationsService {\r\n  constructor() {}\r\n\r\n  private getIugu(): Iugu {\r\n    const iugu: Iugu | undefined = (window as any).Iugu;\r\n    if (!iugu) {\r\n      throw new Error('iugu scripts not yet initialized');\r\n    }\r\n    return iugu;\r\n  }\r\n\r\n  asyncValidateCreditCardNumber = (control: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const iugu = this.getIugu();\r\n        const isValidNumber = iugu.utils.validateCreditCardNumber(\r\n          control.value\r\n        );\r\n        resolver(isValidNumber ? null : { invalidNumber: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  asyncValidateAccountID = (field: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const regex =\r\n          /^[a-fA-F0-9]{8}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{12}$/;\r\n        const isValidAccountID = regex.test(field.value);\r\n        resolver(isValidAccountID ? null : { invalidAccountId: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  validateCVV(\r\n    creditCardNumber: string,\r\n    securityCode: string\r\n  ): (form: FormGroup) => any {\r\n    return (form: FormGroup) => {\r\n      try {\r\n        const cvv = form.controls[securityCode]?.value;\r\n        const ccNumber = form.controls[creditCardNumber]?.value;\r\n        const iugu = this.getIugu();\r\n        const flag = iugu.utils.getBrandByCreditCardNumber(\r\n          ccNumber?.toString()\r\n        );\r\n\r\n        if (!flag || !ccNumber) {\r\n          return form.controls[securityCode].setErrors({\r\n            withoutCreditCardNumber: true,\r\n          });\r\n        }\r\n\r\n        const isValidCVV = iugu.utils.validateCVV(cvv, flag);\r\n\r\n        if (!isValidCVV) {\r\n          form.controls[securityCode].setErrors({ invalidCVV: true });\r\n        }\r\n\r\n        return isValidCVV ? null : { invalidCVV: true };\r\n      } catch (error) {\r\n        return { iuguNotInitialized: true };\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncValidateExpiration = (field: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const { value } = field;\r\n        const iugu = this.getIugu();\r\n        const [cardExpirationMonth, cardExpirationYear] =\r\n          iugu.utils.getMonthYearByFullExpiration(value);\r\n        const isValidExpiration = iugu.utils.validateExpiration(\r\n          cardExpirationMonth,\r\n          cardExpirationYear\r\n        );\r\n\r\n        resolver(isValidExpiration ? null : { invalidExpiration: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-iugu\r\n */\r\n\r\nexport * from './lib/ngx-iugu/ngx-iugu.service';\r\nexport * from './lib/ngx-iugu.module';\r\n\r\n// types\r\nexport * from './lib/ngx-iugu-validations/ngx-iugu-validations.service';\r\nexport * from './lib/iugu-base/iugu-base.models';\r\nexport * from './lib/ngx-iugu/ngx-iugu.models';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\n\nconst iuguParam = new InjectionToken('iuguParam');\r\nclass IuguBaseService {\r\n    constructor(iuguConfig) {\r\n        this.iuguConfig = iuguConfig;\r\n        if (iuguConfig.autoInicialize) {\r\n            this.initialize().then(() => console.log('iugu script loaded'));\r\n        }\r\n    }\r\n    initialize(accountID = '') {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.Iugu = yield this.loadScript();\r\n            this.Iugu.setAccountID(((_a = this.iuguConfig) === null || _a === void 0 ? void 0 : _a.accountID) || accountID);\r\n            this.Iugu.setTestMode((_c = (_b = this.iuguConfig) === null || _b === void 0 ? void 0 : _b.testMode) !== null && _c !== void 0 ? _c : true);\r\n        });\r\n    }\r\n    loadScript() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const script = document.createElement('script');\r\n            document.body.appendChild(script);\r\n            script.type = 'text/javascript';\r\n            const promise = new Promise((resolve) => {\r\n                script.onload = () => resolve(window.Iugu);\r\n            });\r\n            script.src = (_b = (_a = this.iuguConfig) === null || _a === void 0 ? void 0 : _a.CDN) !== null && _b !== void 0 ? _b : 'https://js.iugu.com/v2';\r\n            return promise;\r\n        });\r\n    }\r\n}\r\nIuguBaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, deps: [{ token: iuguParam }], target: i0.ɵɵFactoryTarget.Injectable });\r\nIuguBaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: IuguBaseService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [iuguParam]\r\n                    }] }];\r\n    } });\n\nclass NgxIuguService extends IuguBaseService {\r\n    createCreditCardObject({ cardExpirationMonth, cardExpirationYear, cardNumber, securityCode, firstName, surName, }) {\r\n        return this.Iugu.CreditCard(cardNumber, cardExpirationMonth, cardExpirationYear, firstName, surName, securityCode);\r\n    }\r\n    createTokenByObject(paymentData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const creditCardObject = this.createCreditCardObject(paymentData);\r\n            return yield this.createToken(creditCardObject);\r\n        });\r\n    }\r\n    createToken(paymentData) {\r\n        return new Promise((resolve, reject) => {\r\n            this.Iugu.createPaymentToken(paymentData, (response) => response.errors ? reject(response) : resolve(response));\r\n        });\r\n    }\r\n}\r\nNgxIuguService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxIuguService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }] });\n\n// @dynamic\r\nclass NgxIuguModule {\r\n    static footRoot(iuguConfig) {\r\n        return {\r\n            ngModule: NgxIuguModule,\r\n            providers: [\r\n                NgxIuguService,\r\n                ,\r\n                {\r\n                    provide: iuguParam,\r\n                    useValue: iuguConfig,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nNgxIuguModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxIuguModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule });\r\nNgxIuguModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [],\r\n                    imports: [],\r\n                    exports: [],\r\n                }]\r\n        }] });\n\nclass NgxIuguValidationsService {\r\n    constructor() {\r\n        this.asyncValidateCreditCardNumber = (control) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const iugu = this.getIugu();\r\n                    const isValidNumber = iugu.utils.validateCreditCardNumber(control.value);\r\n                    resolver(isValidNumber ? null : { invalidNumber: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n        this.asyncValidateAccountID = (field) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const regex = /^[a-fA-F0-9]{8}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{12}$/;\r\n                    const isValidAccountID = regex.test(field.value);\r\n                    resolver(isValidAccountID ? null : { invalidAccountId: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n        this.asyncValidateExpiration = (field) => {\r\n            return new Promise((resolver, reject) => {\r\n                try {\r\n                    const { value } = field;\r\n                    const iugu = this.getIugu();\r\n                    const [cardExpirationMonth, cardExpirationYear] = iugu.utils.getMonthYearByFullExpiration(value);\r\n                    const isValidExpiration = iugu.utils.validateExpiration(cardExpirationMonth, cardExpirationYear);\r\n                    resolver(isValidExpiration ? null : { invalidExpiration: true });\r\n                }\r\n                catch (error) {\r\n                    return reject({ iuguNotInitialized: true });\r\n                }\r\n            });\r\n        };\r\n    }\r\n    getIugu() {\r\n        const iugu = window.Iugu;\r\n        if (!iugu) {\r\n            throw new Error('iugu scripts not yet initialized');\r\n        }\r\n        return iugu;\r\n    }\r\n    validateCVV(creditCardNumber, securityCode) {\r\n        return (form) => {\r\n            var _a, _b;\r\n            try {\r\n                const cvv = (_a = form.controls[securityCode]) === null || _a === void 0 ? void 0 : _a.value;\r\n                const ccNumber = (_b = form.controls[creditCardNumber]) === null || _b === void 0 ? void 0 : _b.value;\r\n                const iugu = this.getIugu();\r\n                const flag = iugu.utils.getBrandByCreditCardNumber(ccNumber === null || ccNumber === void 0 ? void 0 : ccNumber.toString());\r\n                if (!flag || !ccNumber) {\r\n                    return form.controls[securityCode].setErrors({\r\n                        withoutCreditCardNumber: true,\r\n                    });\r\n                }\r\n                const isValidCVV = iugu.utils.validateCVV(cvv, flag);\r\n                if (!isValidCVV) {\r\n                    form.controls[securityCode].setErrors({ invalidCVV: true });\r\n                }\r\n                return isValidCVV ? null : { invalidCVV: true };\r\n            }\r\n            catch (error) {\r\n                return { iuguNotInitialized: true };\r\n            }\r\n        };\r\n    }\r\n}\r\nNgxIuguValidationsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxIuguValidationsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: NgxIuguValidationsService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\n/*\r\n * Public API Surface of ngx-iugu\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxIuguModule, NgxIuguService, NgxIuguValidationsService };\n//# sourceMappingURL=ngx-iugu.mjs.map\n","map":{"version":3,"file":"ngx-iugu.mjs","sources":["../../../projects/ngx-iugu/src/lib/iugu-base/iugu-base.service.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu/ngx-iugu.service.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu.module.ts","../../../projects/ngx-iugu/src/lib/ngx-iugu-validations/ngx-iugu-validations.service.ts","../../../projects/ngx-iugu/src/public-api.ts","../../../projects/ngx-iugu/src/ngx-iugu.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport { IuguConfig } from '../ngx-iugu/ngx-iugu.models';\r\nimport { Iugu } from './iugu-base.models';\r\n\r\nexport const iuguParam = new InjectionToken<IuguConfig>('iuguParam');\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IuguBaseService {\r\n  Iugu: Iugu;\r\n\r\n  constructor(@Inject(iuguParam) private iuguConfig?: IuguConfig) {\r\n    if (iuguConfig.autoInicialize) {\r\n      this.initialize().then(() => console.log('iugu script loaded'));\r\n    }\r\n  }\r\n\r\n  async initialize(accountID = ''): Promise<void> {\r\n    this.Iugu = await this.loadScript();\r\n\r\n    this.Iugu.setAccountID(this.iuguConfig?.accountID || accountID);\r\n    this.Iugu.setTestMode(this.iuguConfig?.testMode ?? true);\r\n  }\r\n\r\n  private async loadScript(): Promise<Iugu> {\r\n    const script = document.createElement('script');\r\n    document.body.appendChild(script);\r\n    script.type = 'text/javascript';\r\n\r\n    const promise = new Promise<Iugu>((resolve) => {\r\n      script.onload = () => resolve((window as any).Iugu);\r\n    });\r\n\r\n    script.src = this.iuguConfig?.CDN ?? 'https://js.iugu.com/v2';\r\n    return promise;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CreditCardObjectIugu } from '../iugu-base/iugu-base.models';\r\nimport { IuguBaseService } from '../iugu-base/iugu-base.service';\r\nimport { IuguCreditCard, IuguResponse } from './ngx-iugu.models';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgxIuguService extends IuguBaseService {\r\n  createCreditCardObject({\r\n    cardExpirationMonth,\r\n    cardExpirationYear,\r\n    cardNumber,\r\n    securityCode,\r\n    firstName,\r\n    surName,\r\n  }: IuguCreditCard): CreditCardObjectIugu {\r\n    return this.Iugu.CreditCard(\r\n      cardNumber,\r\n      cardExpirationMonth,\r\n      cardExpirationYear,\r\n      firstName,\r\n      surName,\r\n      securityCode\r\n    );\r\n  }\r\n\r\n  async createTokenByObject(\r\n    paymentData: IuguCreditCard\r\n  ): Promise<IuguResponse> {\r\n    const creditCardObject = this.createCreditCardObject(paymentData);\r\n    return await this.createToken(creditCardObject);\r\n  }\r\n\r\n  createToken(paymentData: CreditCardObjectIugu): Promise<IuguResponse> {\r\n    return new Promise((resolve, reject) => {\r\n      this.Iugu.createPaymentToken(paymentData, (response: IuguResponse) =>\r\n        response.errors ? reject(response) : resolve(response)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxIuguService } from './ngx-iugu/ngx-iugu.service';\r\n\r\nimport { IuguConfig } from './ngx-iugu/ngx-iugu.models';\r\nimport { iuguParam } from './iugu-base/iugu-base.service';\r\n// @dynamic\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n})\r\nexport class NgxIuguModule {\r\n  static footRoot(iuguConfig: IuguConfig): ModuleWithProviders<NgxIuguModule> {\r\n    return {\r\n      ngModule: NgxIuguModule,\r\n      providers: [\r\n        NgxIuguService,\r\n        ,\r\n        {\r\n          provide: iuguParam,\r\n          useValue: iuguConfig,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Iugu } from '../iugu-base/iugu-base.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NgxIuguValidationsService {\r\n  constructor() {}\r\n\r\n  private getIugu(): Iugu {\r\n    const iugu: Iugu | undefined = (window as any).Iugu;\r\n    if (!iugu) {\r\n      throw new Error('iugu scripts not yet initialized');\r\n    }\r\n    return iugu;\r\n  }\r\n\r\n  asyncValidateCreditCardNumber = (control: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const iugu = this.getIugu();\r\n        const isValidNumber = iugu.utils.validateCreditCardNumber(\r\n          control.value\r\n        );\r\n        resolver(isValidNumber ? null : { invalidNumber: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  asyncValidateAccountID = (field: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const regex =\r\n          /^[a-fA-F0-9]{8}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{4}[a-fA-F0-9]{12}$/;\r\n        const isValidAccountID = regex.test(field.value);\r\n        resolver(isValidAccountID ? null : { invalidAccountId: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  validateCVV(\r\n    creditCardNumber: string,\r\n    securityCode: string\r\n  ): (form: FormGroup) => any {\r\n    return (form: FormGroup) => {\r\n      try {\r\n        const cvv = form.controls[securityCode]?.value;\r\n        const ccNumber = form.controls[creditCardNumber]?.value;\r\n        const iugu = this.getIugu();\r\n        const flag = iugu.utils.getBrandByCreditCardNumber(\r\n          ccNumber?.toString()\r\n        );\r\n\r\n        if (!flag || !ccNumber) {\r\n          return form.controls[securityCode].setErrors({\r\n            withoutCreditCardNumber: true,\r\n          });\r\n        }\r\n\r\n        const isValidCVV = iugu.utils.validateCVV(cvv, flag);\r\n\r\n        if (!isValidCVV) {\r\n          form.controls[securityCode].setErrors({ invalidCVV: true });\r\n        }\r\n\r\n        return isValidCVV ? null : { invalidCVV: true };\r\n      } catch (error) {\r\n        return { iuguNotInitialized: true };\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncValidateExpiration = (field: FormControl) => {\r\n    return new Promise((resolver, reject) => {\r\n      try {\r\n        const { value } = field;\r\n        const iugu = this.getIugu();\r\n        const [cardExpirationMonth, cardExpirationYear] =\r\n          iugu.utils.getMonthYearByFullExpiration(value);\r\n        const isValidExpiration = iugu.utils.validateExpiration(\r\n          cardExpirationMonth,\r\n          cardExpirationYear\r\n        );\r\n\r\n        resolver(isValidExpiration ? null : { invalidExpiration: true });\r\n      } catch (error) {\r\n        return reject({ iuguNotInitialized: true });\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-iugu\r\n */\r\n\r\nexport * from './lib/ngx-iugu/ngx-iugu.service';\r\nexport * from './lib/ngx-iugu.module';\r\n\r\n// types\r\nexport * from './lib/ngx-iugu-validations/ngx-iugu-validations.service';\r\nexport * from './lib/iugu-base/iugu-base.models';\r\nexport * from './lib/ngx-iugu/ngx-iugu.models';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}